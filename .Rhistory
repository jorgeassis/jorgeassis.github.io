RNetCDF::dim.def.nc(nc, dimname = "time", dimlength = length(c(1,2))) # 3 years levels
RNetCDF::var.def.nc(nc, varname = "time", vartype = "NC_INT", dimensions = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "units", type = "NC_CHAR", value = "days since 1970-01-01 00:00:00")
RNetCDF::att.put.nc(nc, variable = "time", name = "long_name", type = "NC_CHAR", value = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "calendar", type = "NC_CHAR", value = "gregorian")
RNetCDF::att.put.nc(nc, variable = "time", name = "standard_name", type = "NC_CHAR", value = "time")
RNetCDF::var.put.nc(nc, variable = "time", data = c(1,2))
RNetCDF::var.def.nc(nc, varname = "thetao_mean", vartype = "NC_DOUBLE", dimensions = c("lon", "lat", "time"), deflate=9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "_FillValue", type = "NC_DOUBLE", value = -9999.9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "units", type = "NC_CHAR", value = "T")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "long_name", type = "NC_CHAR", value = "Lon")
# RNetCDF::att.put.nc(nc, variable = varname, name = "standard_name", type = "NC_CHAR", value = standard_name)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "coordinates", type = "NC_CHAR", value = "lat lon")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "grid_mapping", type = "NC_CHAR", value = "crs")
sync.nc(nc)
var.put.nc(nc, variable = "thetao_mean", data = dataVar, start = c( 1, 1, 1), count = c( dim(dataVar)[1], dim(dataVar)[2], dim(dataVar)[3]) )
close.nc( nc )
xlength
?dim.def.nc
library(RNetCDF)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
dataVar <- ncvar_get( ncData, "thetao_mean")
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
timeDataVar <- ncvar_get( ncData, "time")
nc_close( ncData )
path="/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc"
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- RNetCDF::create.nc(path, format = "netcdf4")
# Global attributes
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "Conventions", type = "NC_CHAR", value = "CF-1.5")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "institution", type = "NC_CHAR", value = "Bio-Oracle consortium: https://www.bio-oracle.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "source", type = "NC_CHAR", value = "Bio-Oracle version V3.0")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "history", type = "NC_CHAR", value = paste("File created:" , Sys.time() ))
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "comment", type = "NC_CHAR", value = "Uses attributes recommended by http://cfconventions.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "references", type = "NC_CHAR", value = "https://www.bio-oracle.org")
# Set crs
RNetCDF::var.def.nc(nc, varname = "crs", vartype = "NC_CHAR", dimensions = NA)
RNetCDF::att.put.nc(nc, variable = "crs", name = "grid_mapping_name", type = "NC_CHAR", value = "latitude_longitude")
RNetCDF::att.put.nc(nc, variable = "crs", name = "long_name", type = "NC_CHAR", value = "CRS definition")
RNetCDF::att.put.nc(nc, variable = "crs", name = "longitude_of_prime_meridian", type = "NC_DOUBLE", value = 0.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "semi_major_axis", type = "NC_DOUBLE", value = 6378137.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "inverse_flattening", type = "NC_DOUBLE", value = 298.257223563)
RNetCDF::att.put.nc(nc, variable = "crs", name = "spatial_ref", type = "NC_CHAR", value = 'GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]')
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
# Set Longitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_FLOAT", dimensions = "lon")
RNetCDF::att.put.nc(nc, variable = "lon", name = "units", type = "NC_CHAR", value = "degrees_east")
RNetCDF::att.put.nc(nc, variable = "lon", name = "long_name", type = "NC_CHAR", value = "Longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "standard_name", type = "NC_CHAR", value = "longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "axis", type = "NC_CHAR", value = "X")
RNetCDF::att.put.nc(nc, variable = "lon", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_min", type = "NC_FLOAT", value = -180.0)
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_max", type = "NC_FLOAT", value = 180.0)
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
#lon_data = seq(from = xmin, to = xmax, length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
# Set Latitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lat", dimlength = ylength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lat", vartype = "NC_FLOAT", dimensions = "lat")
RNetCDF::att.put.nc(nc, variable = "lat", name = "units", type = "NC_CHAR", value = "degrees_north")
RNetCDF::att.put.nc(nc, variable = "lat", name = "long_name", type = "NC_CHAR", value = "Latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "standard_name", type = "NC_CHAR", value = "latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "axis", type = "NC_CHAR", value = "Y")
RNetCDF::att.put.nc(nc, variable = "lat", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_min", type = "NC_FLOAT", value = -90.0)
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_max", type = "NC_FLOAT", value = 90.0)
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
# Set time dimension
RNetCDF::dim.def.nc(nc, dimname = "time", dimlength = length(c(1,2))) # 3 years levels
RNetCDF::var.def.nc(nc, varname = "time", vartype = "NC_INT", dimensions = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "units", type = "NC_CHAR", value = "days since 1970-01-01 00:00:00")
RNetCDF::att.put.nc(nc, variable = "time", name = "long_name", type = "NC_CHAR", value = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "calendar", type = "NC_CHAR", value = "gregorian")
RNetCDF::att.put.nc(nc, variable = "time", name = "standard_name", type = "NC_CHAR", value = "time")
RNetCDF::var.put.nc(nc, variable = "time", data = c(1,2))
RNetCDF::var.def.nc(nc, varname = "thetao_mean", vartype = "NC_DOUBLE", dimensions = c("lon", "lat", "time"), deflate=9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "_FillValue", type = "NC_DOUBLE", value = -9999.9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "units", type = "NC_CHAR", value = "T")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "long_name", type = "NC_CHAR", value = "Lon")
# RNetCDF::att.put.nc(nc, variable = varname, name = "standard_name", type = "NC_CHAR", value = standard_name)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "coordinates", type = "NC_CHAR", value = "lat lon")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "grid_mapping", type = "NC_CHAR", value = "crs")
sync.nc(nc)
var.put.nc(nc, variable = "thetao_mean", data = dataVar, start = c( 1, 1, 1), count = c( dim(dataVar)[1], dim(dataVar)[2], dim(dataVar)[3]) )
close.nc( nc )
ylength
?var.put.nc
lat_data
class(lat_data)
as.vector(lat_data)
class(as.vector(lat_data))
lat_data
vect(lat_data)
as.integer(lat_data)
as.double(lat_data)
class(as.double(lat_data))
lat_data
lat_data[1]
lat_data[1] + 0.01
lat_data[1]
library(RNetCDF)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
dataVar <- ncvar_get( ncData, "thetao_mean")
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
timeDataVar <- ncvar_get( ncData, "time")
nc_close( ncData )
path="/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc"
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- RNetCDF::create.nc(path, format = "netcdf4")
# Global attributes
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "Conventions", type = "NC_CHAR", value = "CF-1.5")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "institution", type = "NC_CHAR", value = "Bio-Oracle consortium: https://www.bio-oracle.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "source", type = "NC_CHAR", value = "Bio-Oracle version V3.0")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "history", type = "NC_CHAR", value = paste("File created:" , Sys.time() ))
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "comment", type = "NC_CHAR", value = "Uses attributes recommended by http://cfconventions.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "references", type = "NC_CHAR", value = "https://www.bio-oracle.org")
# Set crs
RNetCDF::var.def.nc(nc, varname = "crs", vartype = "NC_CHAR", dimensions = NA)
RNetCDF::att.put.nc(nc, variable = "crs", name = "grid_mapping_name", type = "NC_CHAR", value = "latitude_longitude")
RNetCDF::att.put.nc(nc, variable = "crs", name = "long_name", type = "NC_CHAR", value = "CRS definition")
RNetCDF::att.put.nc(nc, variable = "crs", name = "longitude_of_prime_meridian", type = "NC_DOUBLE", value = 0.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "semi_major_axis", type = "NC_DOUBLE", value = 6378137.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "inverse_flattening", type = "NC_DOUBLE", value = 298.257223563)
RNetCDF::att.put.nc(nc, variable = "crs", name = "spatial_ref", type = "NC_CHAR", value = 'GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]')
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
# Set Longitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_DOUBLE", dimensions = "lon")
RNetCDF::att.put.nc(nc, variable = "lon", name = "units", type = "NC_CHAR", value = "degrees_east")
RNetCDF::att.put.nc(nc, variable = "lon", name = "long_name", type = "NC_CHAR", value = "Longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "standard_name", type = "NC_CHAR", value = "longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "axis", type = "NC_CHAR", value = "X")
RNetCDF::att.put.nc(nc, variable = "lon", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
#lon_data = seq(from = xmin, to = xmax, length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
# Set Latitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lat", dimlength = ylength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lat", vartype = "NC_DOUBLE", dimensions = "lat")
RNetCDF::att.put.nc(nc, variable = "lat", name = "units", type = "NC_CHAR", value = "degrees_north")
RNetCDF::att.put.nc(nc, variable = "lat", name = "long_name", type = "NC_CHAR", value = "Latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "standard_name", type = "NC_CHAR", value = "latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "axis", type = "NC_CHAR", value = "Y")
RNetCDF::att.put.nc(nc, variable = "lat", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
# Set time dimension
RNetCDF::dim.def.nc(nc, dimname = "time", dimlength = length(c(1,2))) # 3 years levels
RNetCDF::var.def.nc(nc, varname = "time", vartype = "NC_INT", dimensions = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "units", type = "NC_CHAR", value = "days since 1970-01-01 00:00:00")
RNetCDF::att.put.nc(nc, variable = "time", name = "long_name", type = "NC_CHAR", value = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "calendar", type = "NC_CHAR", value = "gregorian")
RNetCDF::att.put.nc(nc, variable = "time", name = "standard_name", type = "NC_CHAR", value = "time")
RNetCDF::var.put.nc(nc, variable = "time", data = c(1,2))
RNetCDF::var.def.nc(nc, varname = "thetao_mean", vartype = "NC_DOUBLE", dimensions = c("lon", "lat", "time"), deflate=9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "_FillValue", type = "NC_DOUBLE", value = -9999.9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "units", type = "NC_CHAR", value = "T")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "long_name", type = "NC_CHAR", value = "Lon")
# RNetCDF::att.put.nc(nc, variable = varname, name = "standard_name", type = "NC_CHAR", value = standard_name)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "coordinates", type = "NC_CHAR", value = "lat lon")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "grid_mapping", type = "NC_CHAR", value = "crs")
sync.nc(nc)
var.put.nc(nc, variable = "thetao_mean", data = dataVar, start = c( 1, 1, 1), count = c( dim(dataVar)[1], dim(dataVar)[2], dim(dataVar)[3]) )
close.nc( nc )
ymin + (0.05/2)
library(RNetCDF)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
dataVar <- ncvar_get( ncData, "thetao_mean")
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
timeDataVar <- ncvar_get( ncData, "time")
nc_close( ncData )
path="/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc"
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- RNetCDF::create.nc(path, format = "netcdf4")
library(RNetCDF)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
dataVar <- ncvar_get( ncData, "thetao_mean")
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
timeDataVar <- ncvar_get( ncData, "time")
nc_close( ncData )
path="/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc"
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- RNetCDF::create.nc(path, format = "netcdf4")
# Global attributes
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "Conventions", type = "NC_CHAR", value = "CF-1.5")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "institution", type = "NC_CHAR", value = "Bio-Oracle consortium: https://www.bio-oracle.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "source", type = "NC_CHAR", value = "Bio-Oracle version V3.0")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "history", type = "NC_CHAR", value = paste("File created:" , Sys.time() ))
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "comment", type = "NC_CHAR", value = "Uses attributes recommended by http://cfconventions.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "references", type = "NC_CHAR", value = "https://www.bio-oracle.org")
# Set crs
RNetCDF::var.def.nc(nc, varname = "crs", vartype = "NC_CHAR", dimensions = NA)
RNetCDF::att.put.nc(nc, variable = "crs", name = "grid_mapping_name", type = "NC_CHAR", value = "latitude_longitude")
RNetCDF::att.put.nc(nc, variable = "crs", name = "long_name", type = "NC_CHAR", value = "CRS definition")
RNetCDF::att.put.nc(nc, variable = "crs", name = "longitude_of_prime_meridian", type = "NC_DOUBLE", value = 0.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "semi_major_axis", type = "NC_DOUBLE", value = 6378137.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "inverse_flattening", type = "NC_DOUBLE", value = 298.257223563)
RNetCDF::att.put.nc(nc, variable = "crs", name = "spatial_ref", type = "NC_CHAR", value = 'GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]')
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
# Set Longitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_DOUBLE", dimensions = "lon")
RNetCDF::att.put.nc(nc, variable = "lon", name = "units", type = "NC_CHAR", value = "degrees_east")
RNetCDF::att.put.nc(nc, variable = "lon", name = "long_name", type = "NC_CHAR", value = "Longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "standard_name", type = "NC_CHAR", value = "longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "axis", type = "NC_CHAR", value = "X")
RNetCDF::att.put.nc(nc, variable = "lon", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_min", type = "NC_DOUBLE", value = xmin + (0.05/2))
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_max", type = "NC_DOUBLE", value = xmax - (0.05/2))
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
#lon_data = seq(from = xmin, to = xmax, length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
# Set Latitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lat", dimlength = ylength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lat", vartype = "NC_DOUBLE", dimensions = "lat")
RNetCDF::att.put.nc(nc, variable = "lat", name = "units", type = "NC_CHAR", value = "degrees_north")
RNetCDF::att.put.nc(nc, variable = "lat", name = "long_name", type = "NC_CHAR", value = "Latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "standard_name", type = "NC_CHAR", value = "latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "axis", type = "NC_CHAR", value = "Y")
RNetCDF::att.put.nc(nc, variable = "lat", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_min", type = "NC_DOUBLE", value = ymin + (0.05/2))
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_max", type = "NC_DOUBLE", value = ymax - (0.05/2))
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
# Set time dimension
RNetCDF::dim.def.nc(nc, dimname = "time", dimlength = length(c(1,2))) # 3 years levels
RNetCDF::var.def.nc(nc, varname = "time", vartype = "NC_INT", dimensions = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "units", type = "NC_CHAR", value = "days since 1970-01-01 00:00:00")
RNetCDF::att.put.nc(nc, variable = "time", name = "long_name", type = "NC_CHAR", value = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "calendar", type = "NC_CHAR", value = "gregorian")
RNetCDF::att.put.nc(nc, variable = "time", name = "standard_name", type = "NC_CHAR", value = "time")
RNetCDF::var.put.nc(nc, variable = "time", data = c(1,2))
RNetCDF::var.def.nc(nc, varname = "thetao_mean", vartype = "NC_DOUBLE", dimensions = c("lon", "lat", "time"), deflate=9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "_FillValue", type = "NC_DOUBLE", value = -9999.9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "units", type = "NC_CHAR", value = "T")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "long_name", type = "NC_CHAR", value = "Lon")
# RNetCDF::att.put.nc(nc, variable = varname, name = "standard_name", type = "NC_CHAR", value = standard_name)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "coordinates", type = "NC_CHAR", value = "lat lon")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "grid_mapping", type = "NC_CHAR", value = "crs")
sync.nc(nc)
var.put.nc(nc, variable = "thetao_mean", data = dataVar, start = c( 1, 1, 1), count = c( dim(dataVar)[1], dim(dataVar)[2], dim(dataVar)[3]) )
close.nc( nc )
xmax
xmax - (0.05/2)
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc")
library(RNetCDF)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
dataVar <- ncvar_get( ncData, "thetao_mean")
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
timeDataVar <- ncvar_get( ncData, "time")
nc_close( ncData )
path="/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc"
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- RNetCDF::create.nc(path, format = "netcdf4")
# Global attributes
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "Conventions", type = "NC_CHAR", value = "CF-1.5")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "institution", type = "NC_CHAR", value = "Bio-Oracle consortium: https://www.bio-oracle.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "source", type = "NC_CHAR", value = "Bio-Oracle version V3.0")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "history", type = "NC_CHAR", value = paste("File created:" , Sys.time() ))
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "comment", type = "NC_CHAR", value = "Uses attributes recommended by http://cfconventions.org")
RNetCDF::att.put.nc(nc, variable = "NC_GLOBAL", name = "references", type = "NC_CHAR", value = "https://www.bio-oracle.org")
# Set crs
RNetCDF::var.def.nc(nc, varname = "crs", vartype = "NC_CHAR", dimensions = NA)
RNetCDF::att.put.nc(nc, variable = "crs", name = "grid_mapping_name", type = "NC_CHAR", value = "latitude_longitude")
RNetCDF::att.put.nc(nc, variable = "crs", name = "long_name", type = "NC_CHAR", value = "CRS definition")
RNetCDF::att.put.nc(nc, variable = "crs", name = "longitude_of_prime_meridian", type = "NC_DOUBLE", value = 0.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "semi_major_axis", type = "NC_DOUBLE", value = 6378137.)
RNetCDF::att.put.nc(nc, variable = "crs", name = "inverse_flattening", type = "NC_DOUBLE", value = 298.257223563)
RNetCDF::att.put.nc(nc, variable = "crs", name = "spatial_ref", type = "NC_CHAR", value = 'GEOGCS[\"WGS 84\",DATUM[\"WGS_1984\",SPHEROID[\"WGS 84\",6378137,298.257223563]],PRIMEM[\"Greenwich\",0],UNIT[\"degree\",0.0174532925199433,AUTHORITY[\"EPSG\",\"9122\"]],AXIS[\"Latitude\",NORTH],AXIS[\"Longitude\",EAST],AUTHORITY[\"EPSG\",\"4326\"]]')
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
# Set Longitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_DOUBLE", dimensions = "lon")
RNetCDF::att.put.nc(nc, variable = "lon", name = "units", type = "NC_CHAR", value = "degrees_east")
RNetCDF::att.put.nc(nc, variable = "lon", name = "long_name", type = "NC_CHAR", value = "Longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "standard_name", type = "NC_CHAR", value = "longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "axis", type = "NC_CHAR", value = "X")
RNetCDF::att.put.nc(nc, variable = "lon", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_min", type = "NC_DOUBLE", value = -180.0)
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_max", type = "NC_DOUBLE", value = 180.0)
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
#lon_data = seq(from = xmin, to = xmax, length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
# Set Latitude dimension
RNetCDF::dim.def.nc(nc, dimname = "lat", dimlength = ylength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lat", vartype = "NC_DOUBLE", dimensions = "lat")
RNetCDF::att.put.nc(nc, variable = "lat", name = "units", type = "NC_CHAR", value = "degrees_north")
RNetCDF::att.put.nc(nc, variable = "lat", name = "long_name", type = "NC_CHAR", value = "Latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "standard_name", type = "NC_CHAR", value = "latitude")
RNetCDF::att.put.nc(nc, variable = "lat", name = "axis", type = "NC_CHAR", value = "Y")
RNetCDF::att.put.nc(nc, variable = "lat", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_min", type = "NC_DOUBLE", value = -90.0)
RNetCDF::att.put.nc(nc, variable = "lat", name = "valid_max", type = "NC_DOUBLE", value = 90.0)
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
# Set time dimension
RNetCDF::dim.def.nc(nc, dimname = "time", dimlength = length(c(1,2))) # 3 years levels
RNetCDF::var.def.nc(nc, varname = "time", vartype = "NC_INT", dimensions = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "units", type = "NC_CHAR", value = "days since 1970-01-01 00:00:00")
RNetCDF::att.put.nc(nc, variable = "time", name = "long_name", type = "NC_CHAR", value = "time")
RNetCDF::att.put.nc(nc, variable = "time", name = "calendar", type = "NC_CHAR", value = "gregorian")
RNetCDF::att.put.nc(nc, variable = "time", name = "standard_name", type = "NC_CHAR", value = "time")
RNetCDF::var.put.nc(nc, variable = "time", data = c(1,2))
RNetCDF::var.def.nc(nc, varname = "thetao_mean", vartype = "NC_DOUBLE", dimensions = c("lon", "lat", "time"), deflate=9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "_FillValue", type = "NC_DOUBLE", value = -9999.9)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "units", type = "NC_CHAR", value = "T")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "long_name", type = "NC_CHAR", value = "Lon")
# RNetCDF::att.put.nc(nc, variable = varname, name = "standard_name", type = "NC_CHAR", value = standard_name)
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "coordinates", type = "NC_CHAR", value = "lat lon")
RNetCDF::att.put.nc(nc, variable = "thetao_mean", name = "grid_mapping", type = "NC_CHAR", value = "crs")
sync.nc(nc)
var.put.nc(nc, variable = "thetao_mean", data = dataVar, start = c( 1, 1, 1), count = c( dim(dataVar)[1], dim(dataVar)[2], dim(dataVar)[3]) )
close.nc( nc )
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc")
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
?var.def.nc
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc", readunlim=FALSE )
ncData
nc_close( ncData )
?create.nc
open.nc
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
ncData
close.nc( nc )
?open.nc
nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
close.nc( nc )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
close.nc( nc )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
close.nc( nc )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE)
RNetCDF::att.put.nc(ncData, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
close.nc( ncData )
nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE )
nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean Test.nc Bk", readunlim=FALSE )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE )
ncData
nc_close( ncData )
nc_close( ncData )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE )
range(ncvar_get( ncData, "lon"))
nc_close( ncData )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE)
close.nc( ncData )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE)
close.nc( ncData )
nc_close( ncData )
ncData
rm(ncData)
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE)
close.nc( ncData )
rm(ncData)
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk")
close.nc( ncData )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE)
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", write=TRUE, share=TRUE)
?nc_open
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE , write=TRUE)
nc_close( ncData )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE , write=TRUE, verbose)TRUE
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc Bk", readunlim=FALSE , write=TRUE, verbose=TRUE)
nc_close( ncData )
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE)
range(ncvar_get( ncData, "lon"))
nc_close( ncData )
ncData <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
RNetCDF::att.put.nc(ncData, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
xlength
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
close.nc( nc )
close.nc( ncData )
rm(ncData)
close.nc( nc )
rm(nc)
close.nc( nc )
nc <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
close.nc( nc )
rm(nc)
close.nc( nc )
rm(nc)
nc <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
#RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_DOUBLE", dimensions = "lon")
RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
#RNetCDF::dim.def.nc(nc, dimname = "lon", dimlength = xlength,unlim=FALSE)
#RNetCDF::var.def.nc(nc, varname = "lon", vartype = "NC_DOUBLE", dimensions = "lon")
RNetCDF::att.put.nc(nc, variable = "lon", name = "units", type = "NC_CHAR", value = "degrees_east")
RNetCDF::att.put.nc(nc, variable = "lon", name = "long_name", type = "NC_CHAR", value = "Longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "standard_name", type = "NC_CHAR", value = "longitude")
RNetCDF::att.put.nc(nc, variable = "lon", name = "axis", type = "NC_CHAR", value = "X")
RNetCDF::att.put.nc(nc, variable = "lon", name = "reference_datum", type = "NC_CHAR", value = "geographical coordinates, WGS84 projection")
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_min", type = "NC_DOUBLE", value = -180.0)
RNetCDF::att.put.nc(nc, variable = "lon", name = "valid_max", type = "NC_DOUBLE", value = 180.0)
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
close.nc( nc )
rm(nc)
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE)
range(ncvar_get( ncData, "lon"))
nc_close( ncData )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE )
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
nc_close( ncData )
lonsDataVar
latsDataVar
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
nc <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", write=TRUE)
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
close.nc( nc )
rm(nc)
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc")
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE)
range(ncvar_get( ncData, "lon"))
range(ncvar_get( ncData, "lat"))
nc_close( ncData )
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc")
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthMean.nc", readunlim=FALSE)
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc", readunlim=FALSE)
range(ncvar_get( ncData, "lon"))
range(ncvar_get( ncData, "lat"))
nc_close( ncData )
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc", readunlim=FALSE )
lonsDataVar <- ncvar_get( ncData, "lon")
latsDataVar <- ncvar_get( ncData, "lat")
nc_close( ncData )
xmax = max(lonsDataVar)
xmin = min(lonsDataVar)
xlength = length(lonsDataVar)
ymax = max(latsDataVar)
ymin = min(latsDataVar)
ylength = length(latsDataVar)
nc <- open.nc("/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc", write=TRUE)
RNetCDF::att.put.nc(nc, variable = "crs", name = "GeoTransform", type = "NC_CHAR", value = '-180 0.05 0 90 0 -0.05')
lon_data = seq(from = xmin + (0.05/2), to = xmax - (0.05/2), length.out = xlength)
RNetCDF::var.put.nc(nc, variable = "lon", data = lon_data)
lat_data = seq(from = ymin + (0.05/2), to = ymax - (0.05/2), length.out = ylength)
RNetCDF::var.put.nc(nc, variable = "lat", data = lat_data)
close.nc( nc )
rm(nc)
raster::raster("/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc")
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc", readunlim=FALSE)
range(ncvar_get( ncData, "lon"))
range(ncvar_get( ncData, "lat"))
nc_close( ncData )
ncData
ncData <- nc_open( "/Users/jorgeassis/Dropbox/climatologyDecadeDepthSurf.nc", readunlim=FALSE)
ncData
nc_close( ncData )
setwd("~/Dropbox/theMarineDataScientist/Stationary/Git/jorgeassis.github.io")
15.8-4.5
11.2-5.8
4.5/5
7.6*5.8
3.43/3.4
0.9*4.5
4.5/4.05
0.9*4.5
4.5/0.9
0.7*3.4
3.38/3.4
2.38/3.4
42*26
(42*26) - 824
